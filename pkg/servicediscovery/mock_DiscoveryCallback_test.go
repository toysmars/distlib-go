// Code generated by mockery v2.26.1. DO NOT EDIT.

package servicediscovery

import mock "github.com/stretchr/testify/mock"

// MockDiscoveryCallback is an autogenerated mock type for the DiscoveryCallback type
type MockDiscoveryCallback struct {
	mock.Mock
}

type MockDiscoveryCallback_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDiscoveryCallback) EXPECT() *MockDiscoveryCallback_Expecter {
	return &MockDiscoveryCallback_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: status
func (_m *MockDiscoveryCallback) Execute(status HealthStatus) {
	_m.Called(status)
}

// MockDiscoveryCallback_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockDiscoveryCallback_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - status HealthStatus
func (_e *MockDiscoveryCallback_Expecter) Execute(status interface{}) *MockDiscoveryCallback_Execute_Call {
	return &MockDiscoveryCallback_Execute_Call{Call: _e.mock.On("Execute", status)}
}

func (_c *MockDiscoveryCallback_Execute_Call) Run(run func(status HealthStatus)) *MockDiscoveryCallback_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(HealthStatus))
	})
	return _c
}

func (_c *MockDiscoveryCallback_Execute_Call) Return() *MockDiscoveryCallback_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDiscoveryCallback_Execute_Call) RunAndReturn(run func(HealthStatus)) *MockDiscoveryCallback_Execute_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockDiscoveryCallback interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDiscoveryCallback creates a new instance of MockDiscoveryCallback. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDiscoveryCallback(t mockConstructorTestingTNewMockDiscoveryCallback) *MockDiscoveryCallback {
	mock := &MockDiscoveryCallback{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
